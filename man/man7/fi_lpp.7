.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "fi_lpp" "7" "2024\-10\-17" "Libfabric Programmer\[cq]s Manual" "#VERSION#"
.hy
.SH NAME
.PP
fi_lpp - The LPP Fabric Provider
.SH OVERVIEW
.PP
The LPP provider runs on FabreX PCIe networks.
FabreX provides high performance RDMA capabilities which form the
foundation of the LPP provider.
Higher level primitives are implemented at the libfabric and LPP kernel
module (KLPP) layers.
.SH SUPPORTED FEATURES
.PP
The LPP provider supports a subset of the libfabric API.
Key features include:
.TP
\f[I]Endpoint types\f[R]
LPP supports the \f[I]FI_EP_RDM\f[R] endpoint type with resource
management.
.TP
\f[I]Endpoint capabilities\f[R]
LPP supports \f[I]FI_MSG\f[R], \f[I]FI_RMA\f[R], and \f[I]FI_TAGGED\f[R]
message types.
.TP
\f[I]Additional capabilities\f[R]
LPP supports the additional features: \f[I]FI_DIRECTED_RECV\f[R],
\f[I]FI_MULTI_RECV\f[R], \f[I]FI_INJECT\f[R],
\f[I]FI_DELIVERY_COMPLETE\f[R]
.TP
\f[I]Progress\f[R]
LPP currently supports only \f[I]FI_PROGRESS_MANUAL\f[R].
Therefore user applications are required to poll for progress.
.SH LIMITATIONS
.PP
These features are unsupported: connection management, event queue,
scalable endpoint, passive endpoint, shared receive context, atomics.
.SH RUNTIME PARAMETERS
.PP
The LPP provider checks for the following environment variables -
.TP
\f[I]FI_LPP_DISABLE_OSBYPASS\f[R]
A bool which disables direct userspace writes when set.
This can be used as a debugging aid, however it will degrade
performance.
.TP
\f[I]FI_LPP_MAX_WR_OSBYPASS_SIZE\f[R]
Sets the maximum size for PIO when performing write RDMA transfers.
Transfers at or below this size will use CPU copy, while transfers above
it will use a DMA engine.
.TP
\f[I]FI_LPP_MAX_RD_OSBYPASS_SIZE\f[R]
Sets the maximum size for PIO when performing read RDMA transfers.
Transfers at or below this size will use CPU copy, while transfers above
it will use a DMA engine.
.TP
\f[I]FI_LPP_CQ_OVERCOMMIT\f[R]
A bool which allows operations to start that may overrun the CQ.
Normally, when resource management is enabled, the LPP provider will
attempt to throttle operations that might overrun the CQ.
This parameter disables that behavior while leaving the remainder of the
resource management features enabled.
.TP
\f[I]FI_LPP_DOMAIN_CLEANUP\f[R]
A bool which controls whether closing a domain with active resources
will cause those resources to be automatically closed.
If true (the default), the LPP provider will automatically close the
resources.
.TP
\f[I]FI_LPP_SYSTEM_MEMCPY\f[R]
Use the memcpy implementation in the system libc rather than
provider-specific memcpy.
.SH SEE ALSO
.PP
\f[C]fabric\f[R](7), \f[C]fi_provider\f[R](7), \f[C]fi_getinfo\f[R](3)
.SH AUTHORS
OpenFabrics.
