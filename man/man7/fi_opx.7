.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "fi_opx" "7" "2025\-04\-24" "Libfabric Programmer\[cq]s Manual" "#VERSION#"
.hy
.PP
{%include JB/setup %}
.SH NAME
.PP
fi_opx - The Omni-Path Express Fabric Provider
.SH OVERVIEW
.PP
The \f[I]opx\f[R] provider is a native libfabric provider suitable for
use with Omni-Path fabrics.
OPX features great scalability and performance when running
libfabric-enabled message layers.
OPX requires 3 additonal external development libraries to build:
libuuid, libnuma, and the Linux kernel headers.
.SH SUPPORTED FEATURES
.PP
The OPX provider supports most features defined for the libfabric API.
.PP
Key features include:
.TP
Endpoint types
The Omni-Path HFI hardware is connectionless and reliable.
The OPX provider only supports the \f[I]FI_EP_RDM\f[R] endpoint type.
.TP
Capabilities
Supported capabilities include \f[I]FI_MSG\f[R], \f[I]FI_RMA,
\f[R]FI_TAGGED\f[I], \f[R]FI_ATOMIC\f[I], \f[R]FI_NAMED_RX_CTX\f[I],
\f[R]FI_SOURCE\f[I], \f[R]FI_SEND\f[I], \f[R]FI_RECV\f[I],
\f[R]FI_MULTI_RECV\f[I], \f[R]FI_DIRECTED_RECV\f[I], \f[R]FI_SOURCE*.
.PP
Notes on \f[I]FI_DIRECTED_RECV\f[R] capability: The immediate data which
is sent within the \[lq]senddata\[rq] call to support
\f[I]FI_DIRECTED_RECV\f[R] for OPX must be exactly 4 bytes, which OPX
uses to completely identify the source address to an exascale-level
number of ranks for tag matching on the recv and can be managed within
the MU packet.
Therefore the domain attribute \[lq]cq_data_size\[rq] is set to 4 which
is the OFI standard minimum.
.TP
Modes
Two modes are defined: \f[I]FI_CONTEXT2\f[R] and \f[I]FI_ASYNC_IOV\f[R].
The OPX provider requires \f[I]FI_CONTEXT2\f[R].
.TP
Additional features
Supported additional features include \f[I]FABRIC_DIRECT\f[R],
\f[I]scalable endpoints\f[R], and \f[I]counters\f[R].
.TP
Progress
\f[I]FI_PROGRESS_MANUAL\f[R] and \f[I]FI_PROGRESS_AUTO\f[R] are
supported, for best performance, use \f[I]FI_PROGRESS_MANUAL\f[R] when
possible.
\f[I]FI_PROGRESS_AUTO\f[R] will spawn 1 thread per CQ.
.TP
Address vector
\f[I]FI_AV_MAP\f[R] and \f[I]FI_AV_TABLE\f[R] are both supported.
\f[I]FI_AV_MAP\f[R] is default.
.TP
Memory registration modes
Only \f[I]FI_MR_SCALABLE\f[R] is supported.
.SH UNSUPPORTED FEATURES
.TP
Endpoint types
Unsupported endpoint types include \f[I]FI_EP_DGRAM\f[R] and
\f[I]FI_EP_MSG\f[R].
.TP
Capabilities
The OPX provider does not support \f[I]FI_RMA_EVENT\f[R] and
\f[I]FI_TRIGGER\f[R] capabilities.
.SH LIMITATIONS
.PP
OPX supports the following MPI versions:
.PP
Intel MPI from Parallel Studio 2020, update 4.
Intel MPI from OneAPI 2021, update 3.
Open MPI 4.1.2a1 (Older version of Open MPI will not work).
MPICH 3.4.2 and later.
.PP
Usage:
.PP
If using with OpenMPI 4.1.x, disable UCX and openib transports.
OPX is not compatible with Open MPI 4.1.x PML/BTL.
.SH CONFIGURATION OPTIONS
.TP
\f[I]OPX_AV\f[R]
OPX supports the option of setting the AV mode to use in a build.
3 settings are supported: - table - map - runtime
.PP
Using table or map will only allow OPX to use FI_AV_TABLE or FI_AV_MAP.
Using runtime will allow OPX to use either AV mode depending on what the
application requests.
Specifying map or table however may lead to a slight performance
improvement depending on the application.
.PP
To change OPX_AV, add OPX_AV=table, OPX_AV=map, or OPX_AV=runtime to the
configure command.
For example, to create a new build with OPX_AV=table:
.PD 0
.P
.PD
OPX_AV=table ./configure
.PD 0
.P
.PD
make install
.PD 0
.P
.PD
.PD 0
.P
.PD
There is no way to change OPX_AV after it is set.
If OPX_AV is not set in the configure, the default value is runtime.
.SH RUNTIME PARAMETERS
.TP
\f[I]FI_OPX_UUID\f[R]
OPX requires a unique ID for each job.
In order for all processes in a job to communicate with each other, they
require to use the same UUID.
This variable can be set with FI_OPX_UUID=${RANDOM} The default UUID is
00112233445566778899aabbccddeeff.
.TP
\f[I]FI_OPX_FORCE_CPUAFFINITY\f[R]
Boolean (1/0, on/off, true/false, yes/no).
Causes the thread to bind itself to the cpu core it is running on.
Defaults to \[lq]No\[rq]
.TP
\f[I]FI_OPX_RELIABILITY_SERVICE_USEC_MAX\f[R]
Integer.
This setting controls how frequently the reliability/replay function
will issue PING requests to a remote connection.
Reducing this value may improve performance at the expense of increased
traffic on the OPX fabric.
Default setting is 500.
.TP
\f[I]FI_OPX_RELIABILITY_SERVICE_MAX_OUTSTANDING_BYTES\f[R]
Integer.
This setting controls the maximum number of bytes allowed to be
in-flight (sent but un-ACK\[cq]d by receiver) per reliability flow
(one-way communication between two endpoints).
.PP
Valid values are in the range of 8192-150,994,944 (8KB-144MB),
inclusive.
.PP
Default setting is 7,340,032 (7MB).
.TP
\f[I]FI_OPX_RELIABILITY_SERVICE_PRE_ACK_RATE\f[R]
Integer.
This setting controls how frequently a receiving rank will send ACKs for
packets it has received without being prompted through a PING request.
A non-zero value N tells the receiving rank to send an ACK for the last
N packets every Nth packet.
Used in conjunction with an increased value for
FI_OPX_RELIABILITY_SERVICE_USEC_MAX may improve performance.
.PP
Valid values are 0 (disabled) and powers of 2 in the range of 1-32,768,
inclusive.
.PP
Default setting is 64.
.TP
\f[I]FI_OPX_RELIABILITY_MAX_UNCONGESTED_PINGS\f[R]
Integer.
This setting controls how many PING requests the reliability/replay
function will issue per iteration of FI_OPX_RELIABILITY_SERVICE_USEC_MAX
in situations with less contending outgoing traffic from the HFI.
Default setting is 128.
Range of valid values is 1-65535.
.TP
\f[I]FI_OPX_RELIABILITY_MAX_CONGESTED_PINGS\f[R]
Integer.
This setting controls how many PING requests the reliability/replay
function will issue per iteration of FI_OPX_RELIABILITY_SERVICE_USEC_MAX
in situations with more contending, outgoing traffic from the HFI.
Default setting is 4.
Range of valid values is 1-65535.
.TP
\f[I]FI_OPX_SELINUX\f[R]
Boolean (1/0, on/off, true/false, yes/no).
Set to true if you\[cq]re running a security-enhanced Linux.
This enables updating the Jkey used based on system settings.
Defaults to \[lq]No\[rq]
.TP
\f[I]FI_OPX_HFI_SELECT\f[R]
String.
Controls how OPX chooses which HFI to use when opening a context.
Has two forms: - \f[V]<hfi-unit>\f[R] Force OPX provider to use
\f[V]hfi-unit\f[R].
- \f[V]<selector1>[,<selector2>[,...,<selectorN>]]\f[R] Select HFI based
on first matching \f[V]selector\f[R]
.PP
Where \f[V]selector\f[R] is one of the following forms: -
\f[V]default\f[R] to use the default logic - \f[V]fixed:<hfi-unit>\f[R]
to fix to one \f[V]hfi-unit\f[R] -
\f[V]<selector-type>:<hfi-unit>:<selector-data>\f[R]
.PP
The above fields have the following meaning: - \f[V]selector-type\f[R]
The selector criteria the caller opening the context is evaluated
against.
- \f[V]hfi-unit\f[R] The HFI to use if the caller matches the selector.
- \f[V]selector-data\f[R] Data the caller must match (e.g.\ NUMA node
ID).
.PP
Where \f[V]selector-type\f[R] is one of the following: - \f[V]numa\f[R]
True when caller is local to the NUMA node ID given by
\f[V]selector-data\f[R].
- \f[V]core\f[R] True when caller is local to the CPU core given by
\f[V]selector-data\f[R].
.PP
And \f[V]selector-data\f[R] is one of the following: - \f[V]value\f[R]
The specific value to match - \f[V]<range-start>-<range-end>\f[R]
Matches with any value in that range
.PP
In the second form, when opening a context, OPX uses the
\f[V]hfi-unit\f[R] of the first-matching selector.
Selectors are evaluated left-to-right.
OPX will return an error if the caller does not match any selector.
.PP
In either form, it is an error if the specified or selected HFI is not
in the Active state.
In this case, OPX will return an error and execution will not continue.
.PP
With this option, it is possible to cause OPX to try to open more
contexts on an HFI than there are free contexts on that HFI.
In this case, one or more of the context-opening calls will fail and OPX
will return an error.
For the second form, as which HFI is selected depends on properties of
the caller, deterministic HFI selection requires deterministic caller
properties.
E.g.
for the \f[V]numa\f[R] selector, if the caller can migrate between NUMA
domains, then HFI selection will not be deterministic.
.PP
The logic used will always be the first valid in a selector list.
For example, \f[V]default\f[R] and \f[V]fixed\f[R] will match all
callers, so if either are in the beginning of a selector list, you will
only use \f[V]fixed\f[R] or \f[V]default\f[R] regardles of if there are
any more selectors.
.PP
Examples: - \f[V]FI_OPX_HFI_SELECT=0\f[R] all callers will open contexts
on HFI 0.
- \f[V]FI_OPX_HFI_SELECT=1\f[R] all callers will open contexts on HFI 1.
- \f[V]FI_OPX_HFI_SELECT=numa:0:0,numa:1:1,numa:0:2,numa:1:3\f[R]
callers local to NUMA nodes 0 and 2 will use HFI 0, callers local to
NUMA domains 1 and 3 will use HFI 1.
- \f[V]FI_OPX_HFI_SELECT=numa:0:0-3,default\f[R] callers local to NUMA
nodes 0 thru 3 (including 0 and 3) will use HFI 0, and all else will use
default selection logic.
- \f[V]FI_OPX_HFI_SELECT=core:1:0,fixed:0\f[R] callers local to CPU core
0 will use HFI 1, and all others will use HFI 0.
- \f[V]FI_OPX_HFI_SELECT=default,core:1:0\f[R] all callers will use
default HFI selection logic.
.TP
\f[I]FI_OPX_PORT\f[R]
Integer.
HFI1 port number.
If the specified port is not available, a default active port will be
selected.
Special value 0 indicates any available port.
Defaults to port 1 on OPA100 and any port on CN5000.
.TP
\f[I]FI_OPX_DELIVERY_COMPLETION_THRESHOLD\f[R]
Integer.
Will be deprecated.
Please use FI_OPX_SDMA_BOUNCE_BUF_THRESHOLD.
.TP
\f[I]FI_OPX_SDMA_BOUNCE_BUF_THRESHOLD\f[R]
Integer.
The maximum message length in bytes that will be copied to the SDMA
bounce buffer.
For messages larger than this threshold, the send will not be completed
until receiver has ACKed.
Value must be between 16385 and 2147483646.
Defaults to 16385.
.TP
\f[I]FI_OPX_SDMA_DISABLE\f[R]
Boolean (1/0, on/off, true/false, yes/no).
Disables SDMA offload hardware.
Default is 0.
.TP
\f[I]FI_OPX_SDMA_MIN_PAYLOAD_BYTES\f[R]
Integer.
The minimum length in bytes where SDMA will be used.
For messages smaller than this threshold, the send will be completed
using PIO.
Value must be between 64 and 2147483646.
Defaults to 16385.
.TP
\f[I]FI_OPX_SDMA_MAX_WRITEVS_PER_CYCLE\f[R]
Integer.
The maximum number of times writev will be called during a single poll
cycle.
Value must be between 1 and 1024.
Defaults to 1.
.TP
\f[I]FI_OPX_SDMA_MAX_IOVS_PER_WRITEV\f[R]
Integer.
The maximum number of IOVs passed to each writev call.
Value must be between 3 and 128.
Defaults to 64.
.TP
\f[I]FI_OPX_SDMA_MAX_PKTS\f[R]
Integer.
The maximum number of packets transmitted per SDMA request when expected
receive (TID) is NOT being used.
Value must be between 1 and 128.
Defaults to 32.
.TP
\f[I]FI_OPX_SDMA_MAX_PKTS_TID\f[R]
Integer.
The maximum number of packets transmitted per SDMA request when expected
receive (TID) is being used.
Value must be between 1 and 512.
Defaults to 64.
.TP
\f[I]FI_OPX_TID_MIN_PAYLOAD_BYTES\f[R]
Integer.
The minimum length in bytes where TID (Expected Receive) will be used.
For messages smaller than this threshold, the send will be completed
using Eager Receive.
Value must be between 4096 and 2147483646.
Defaults to 4096.
.TP
\f[I]FI_OPX_RZV_MIN_PAYLOAD_BYTES\f[R]
Integer.
The minimum length in bytes where rendezvous will be used.
For messages smaller than this threshold, the send will first try to be
completed using eager or multi-packet eager.
Value must be between 64 and 65536.
Defaults to 16385.
.TP
\f[I]FI_OPX_MP_EAGER_DISABLE\f[R]
Boolean (1/0, on/off, true/false, yes/no).
Disables multi-packet eager.
Defaults to 0.
.TP
\f[I]FI_OPX_TID_DISABLE\f[R]
Boolean (1/0, on/off, true/false, yes/no).
Disables using Token ID (TID).
Defaults to 0.
.TP
\f[I]FI_OPX_EXPECTED_RECEIVE_ENABLE\f[R]
Deprecated.
Use FI_OPX_TID_DISABLE instead.
.TP
\f[I]FI_OPX_PROG_AFFINITY\f[R]
String.
This sets the affinity to be used for any progress threads.
Set as a colon-separated triplet as \f[V]start:end:stride\f[R], where
stride controls the interval between selected cores.
For example, \f[V]1:5:2\f[R] will have cores 1, 3, and 5 as valid cores
for progress threads.
By default no affinity is set.
.TP
\f[I]FI_OPX_AUTO_PROGRESS_INTERVAL_USEC\f[R]
Deprecated/ignored.
Auto progress threads are now interrupt-driven and only poll when data
is available.
.TP
\f[I]FI_OPX_PKEY\f[R]
Integer.
Partition key, a 2 byte positive integer.
Default is the Pkey in the index 0 of the Pkey table of the unit and
port on which context is created.
.TP
\f[I]FI_OPX_SL\f[R]
Integer.
Service Level.
This will also determine Service Class and Virtual Lane.
Default is 0
.TP
\f[I]FI_OPX_DEV_REG_SEND_THRESHOLD\f[R]
Integer.
The individual packet threshold where lengths above do not use a device
registered copy when sending data from GPU.
The default threshold is 4096.
This has no meaning if Libfabric was not configured with GDRCopy or ROCR
support.
.TP
\f[I]FI_OPX_DEV_REG_RECV_THRESHOLD\f[R]
Integer.
The individual packet threshold where lengths above do not use a device
registered copy when receiving data into GPU.
The default threshold is 8192.
This has no meaning if Libfabric was not configured with GDRCopy or ROCR
support.
.TP
\f[I]FI_OPX_MIXED_NETWORK\f[R]
Integer.
Indicates that the network is a mix of OPA100 and CN5000.
Needs to be set to 1 in case of mixed network.
Default is 0.
.TP
\f[I]FI_OPX_ROUTE_CONTROL\f[R]
Integer.
Specify the route control for each packet type.
The format is -
\f[V]<inject packet type value>:<eager packet type value>:<multi-packet eager packet type value>:<dput packet type value>:<rendezvous control packet value>:<rendezvous data packet value>\f[R].
.PP
Each value can range from 0-7.
0-3 is used for in-order and 4-7 is used for out-of-order.
If Token ID (TID) is enabled the out-of-order route controls are
disabled.
.PP
Default is \f[V]0:0:0:0:0:0\f[R] on OPA100 and \f[V]4:4:4:4:0:4\f[R] on
CN5000.
.TP
\f[I]FI_OPX_SHM_ENABLE\f[R]
Boolean (1/0, on/off, true/false, yes/no).
Enables shm across all ports and hfi units on the node.
Setting it to NO disables shm except peers with same lid and same hfi1
(loopback).
Defaults to: \[lq]YES\[rq]
.TP
\f[I]FI_OPX_LINK_DOWN_WAIT_TIME_MAX_SEC\f[R]
Integer.
The maximum time in seconds to wait for a link to come back up.
Default is 70 seconds.
.SH SEE ALSO
.PP
\f[V]fabric\f[R](7), \f[V]fi_provider\f[R](7), \f[V]fi_getinfo\f[R](7),
.SH AUTHORS
OpenFabrics.
